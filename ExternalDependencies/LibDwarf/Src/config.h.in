/* config.h.in.  Generated from configure.in by autoheader.  */

/* Define if building universal (internal helper macro) */
#cmakedefine AC_APPLE_UNIVERSAL_BUILD @AC_APPLE_UNIVERSAL_BUILD@

/* Define to 1 if you have the <alloca.h> header file. */
#cmakedefine HAVE_ALLOCA_H @HAVE_ALLOCA_H@

/* Define 1 if want to allow producer to build with 32/64bit section offsets
   per dwarf3 */
#cmakedefine HAVE_DWARF2_99_EXTENSION @HAVE_DWARF2_99_EXTENSION@

/* Define to 1 if the elf64_getehdr function is in libelf.a. */
#cmakedefine HAVE_ELF64_GETEHDR @HAVE_ELF64_GETEHDR@

/* Define to 1 if the elf64_getshdr function is in libelf.a. */
#cmakedefine HAVE_ELF64_GETSHDR @HAVE_ELF64_GETSHDR@

/* Define 1 if Elf64_Rela defined. */
#cmakedefine HAVE_ELF64_RELA @HAVE_ELF64_RELA@

/* Define 1 if Elf64_Sym defined. */
#cmakedefine HAVE_ELF64_SYM @HAVE_ELF64_SYM@

/* Define to 1 if you have the <elfaccess.h> header file. */
#cmakedefine HAVE_ELFACCESS_H @HAVE_ELFACCESS_H@

/* Define to 1 if you have the <elf.h> header file. */
#cmakedefine HAVE_ELF_H @HAVE_ELF_H@

/* Define to 1 if you have the <inttypes.h> header file. */
#cmakedefine HAVE_INTTYPES_H @HAVE_INTTYPES_H@

/* Define to 1 if you have the <libelf.h> header file. */
#cmakedefine HAVE_LIBELF_H @HAVE_LIBELF_H@

/* Define to 1 if you have the <libelf/libelf.h> header file. */
#cmakedefine HAVE_LIBELF_LIBELF_H @HAVE_LIBELF_LIBELF_H@

/* Define 1 if off64 is defined via libelf with GNU_SOURCE. */
#cmakedefine HAVE_LIBELF_OFF64_OK @HAVE_LIBELF_OFF64_OK@

/* Define to 1 if you have the <memory.h> header file. */
#cmakedefine HAVE_MEMORY_H @HAVE_MEMORY_H@

/* Define 1 if need nonstandard printf format for 64bit */
#cmakedefine HAVE_NONSTANDARD_PRINTF_64_FORMAT @HAVE_NONSTANDARD_PRINTF_64_FORMAT@

/* Define 1 to default to old DW_FRAME_CFA_COL */
#cmakedefine HAVE_OLD_FRAME_CFA_COL @HAVE_OLD_FRAME_CFA_COL@

/* Define 1 if plain libelf builds. */
#cmakedefine HAVE_RAW_LIBELF_OK @HAVE_RAW_LIBELF_OK@

/* Define 1 if R_IA_64_DIR32LSB is defined (might be enum value). */
#cmakedefine HAVE_R_IA_64_DIR32LSB @HAVE_R_IA_64_DIR32LSB@

/* Define 1 if want producer to build with IRIX offset sizes */
#cmakedefine HAVE_SGI_IRIX_OFFSETS @HAVE_SGI_IRIX_OFFSETS@

/* Define 1 if we have the Windows specific header stdafx.h */
#cmakedefine HAVE_STDAFX_H @HAVE_STDAFX_H@

/* Define to 1 if you have the <stdint.h> header file. */
#cmakedefine HAVE_STDINT_H @HAVE_STDINT_H@

/* Define to 1 if you have the <stdlib.h> header file. */
#cmakedefine HAVE_STDLIB_H @HAVE_STDLIB_H@

/* Define 1 if want producer to build with only 32bit section offsets */
#cmakedefine HAVE_STRICT_DWARF2_32BIT_OFFSET @HAVE_STRICT_DWARF2_32BIT_OFFSET@

/* Define to 1 if you have the <strings.h> header file. */
#cmakedefine HAVE_STRINGS_H @HAVE_STRINGS_H@

/* Define to 1 if you have the <string.h> header file. */
#cmakedefine HAVE_STRING_H @HAVE_STRING_H@

/* Define 1 if libelf.h defines struct _Elf */
#cmakedefine HAVE_STRUCT_UNDERSCORE_ELF @HAVE_STRUCT_UNDERSCORE_ELF@

/* Define to 1 if you have the <sys/ia64/elf.h> header file. */
#cmakedefine HAVE_SYS_IA64_ELF_H @HAVE_SYS_IA64_ELF_H@

/* Define to 1 if you have the <sys/stat.h> header file. */
#cmakedefine HAVE_SYS_STAT_H @HAVE_SYS_STAT_H@

/* Define to 1 if you have the <sys/types.h> header file. */
#cmakedefine HAVE_SYS_TYPES_H @HAVE_SYS_TYPES_H@

/* Define to 1 if you have the <unistd.h> header file. */
#cmakedefine HAVE_UNISTD_H @HAVE_UNISTD_H@

/* Define 1 if __attribute__ ((unused)) compiles ok. */
#cmakedefine HAVE_UNUSED_ATTRIBUTE @HAVE_UNUSED_ATTRIBUTE@

/* Define 1 if want to allow Windows full path detection */
#cmakedefine HAVE_WINDOWS_PATH @HAVE_WINDOWS_PATH@

/* Define 1 if zlib (decompression library) seems available. */
#cmakedefine HAVE_ZLIB @HAVE_ZLIB@

/* See if __uint32_t is predefined in the compiler. */
#cmakedefine HAVE___UINT32_T @HAVE___UINT32_T@

/* Define 1 if __uint32_t is in sgidefs.h. */
#cmakedefine HAVE___UINT32_T_IN_SGIDEFS_H @HAVE___UINT32_T_IN_SGIDEFS_H@

/* Define 1 if sys/types.h defines __uint32_t. */
#cmakedefine HAVE___UINT32_T_IN_SYS_TYPES_H @HAVE___UINT32_T_IN_SYS_TYPES_H@

/* See if __uint64_t is predefined in the compiler. */
#cmakedefine HAVE___UINT64_T @HAVE___UINT64_T@

/* Define 1 if is in sgidefs.h. */
#cmakedefine HAVE___UINT64_T_IN_SGIDEFS_H @HAVE___UINT64_T_IN_SGIDEFS_H@

/* Define 1 if sys/types.h defines __uint64_t. */
#cmakedefine HAVE___UINT64_T_IN_SYS_TYPES_H @HAVE___UINT64_T_IN_SYS_TYPES_H@

/* Define to the address where bug reports for this package should be sent. */
#cmakedefine PACKAGE_BUGREPORT @PACKAGE_BUGREPORT@

/* Define to the full name of this package. */
#cmakedefine PACKAGE_NAME @PACKAGE_NAME@

/* Define to the full name and version of this package. */
#cmakedefine PACKAGE_STRING @PACKAGE_STRING@

/* Define to the one symbol short name of this package. */
#cmakedefine PACKAGE_TARNAME @PACKAGE_TARNAME@

/* Define to the home page for this package. */
#cmakedefine PACKAGE_URL @PACKAGE_URL@

/* Define to the version of this package. */
#cmakedefine PACKAGE_VERSION @PACKAGE_VERSION@

/* Define to 1 if you have the ANSI C header files. */
#cmakedefine STDC_HEADERS @STDC_HEADERS@

/* Define WORDS_BIGENDIAN to 1 if your processor stores words with the most
   significant byte first (like Motorola and SPARC, unlike Intel). */
#if defined AC_APPLE_UNIVERSAL_BUILD
# if defined __BIG_ENDIAN__
#  define WORDS_BIGENDIAN 1
# endif
#else
# ifndef WORDS_BIGENDIAN
#  undef WORDS_BIGENDIAN
# endif
#endif

/* Define to 1 if you have the <libelf.h> header file under the root. */
#cmakedefine __LIBELF_INTERNAL__ @__LIBELF_INTERNAL__@

